# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
      - image: circleci/mysql:8.0.4
        environment:
          DB_HOST: 127.0.0.1
        command: mysqld --default-authentication-plugin=mysql_native_password
        ports:
          - 3306:3306

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
      DATASOURCE: jdbc:mysql://localhost:3306/rngd_ss_todo
      MYSQL_ROOT_USER: root
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: rngd_ss_todo
      MYSQL_USER: springuser
      MYSQL_PASSWORD: springuser

    steps:
      - checkout
      - run:
            name: MySQLが準備できるまで待機する
            command: |
              for i in `seq 1 10`;
              do
                nc -z 127.0.0.1 3306 && echo Success && exit 0
                echo -n .
                sleep 1
              done
              echo Failed waiting for MySQL && exit 1
      - run:
            name: MySQL CLIのインストール; DB作成
            command: |
              sudo apt update -y
              sudo apt install -y default-mysql-client
              mysql -h 127.0.0.1 -u ${MYSQL_ROOT_USER} < sql-data/init.sql

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: gradle test
